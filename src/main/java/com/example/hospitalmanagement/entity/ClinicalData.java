package com.example.hospitalmanagement.entity;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

/**
 * This class represents the ClinicalData entity, which is used to store clinical records or medical history of a patient.
 * It includes a unique identifier, the clinical record itself, and a relationship to the Patient entity.
 */
@Getter // Lombok annotation to automatically generate getter methods for all fields.
@Setter // Lombok annotation to automatically generate setter methods for all fields.
@Entity // Marks this class as a JPA entity, meaning it will be mapped to a database table.
public class ClinicalData {

    /**
     * The unique identifier for the clinical record.
     * This field is automatically generated by the database using an identity column.
     */
    @Id // Marks this field as the primary key of the entity.
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Specifies that the primary key is auto-incremented by the database.
    private Long id;

    /**
     * The clinical record or medical history of the patient.
     * This field can store large text data (e.g., detailed medical notes).
     */
    @Lob // Specifies that this field can store large objects (e.g., long text).
    private String clinicalRecord;

    /**
     * The patient associated with this clinical record.
     * This field establishes a many-to-one relationship with the Patient entity.
     */
    @ManyToOne // Specifies a many-to-one relationship with the Patient entity.
    @JoinColumn(name = "patient_id", nullable = false) // Specifies the foreign key column in the database and ensures it cannot be null.
    private Patient patient;

    /**
     * Default constructor.
     * Required for JPA to create instances of this class during data retrieval.
     */
    public ClinicalData() {}

    /**
     * Constructor with required fields.
     * Useful for creating instances of this class with predefined values.
     *
     * @param patient The patient associated with this clinical record.
     * @param clinicalRecord The clinical record or medical history of the patient.
     */
    public ClinicalData(Patient patient, String clinicalRecord) {
        this.patient = patient;
        this.clinicalRecord = clinicalRecord;
    }
}